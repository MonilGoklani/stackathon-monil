{"version":3,"sources":["logo.svg","firebase.js","history.js","landingPage.js","questionBank.js","answers.js","loadGame.js","newGame.js","votes.js","gameover.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","history","createBrowserHistory","firestore","useStyles","makeStyles","theme","root","margin","spacing","width","LandingPage","props","classes","getPlayers","docRef","a","myData","get","then","doc","exists","data","enterGame","ev","preventDefault","gameCode","document","querySelector","value","window","localStorage","setItem","toString","playerName","playerObject","players","Object","values","includes","push","length","playerField","playerValue","set","alert","className","src","TextField","type","id","variant","Button","color","component","onClick","questionBank","1","2","3","getItem","Answers","state","answers","selected","getAnswers","bind","submitAnswer","answerRef","onSnapshot","setState","map","round","answerObj","player","answer","this","style","fontSize","React","Component","withStyles","LoadGame","counter","startCounter","timerId","setInterval","clearInterval","question","NewGame","currentPlayer","filter","match","params","maxRoundTime","Votes","votes","winner","selectedAnswer","submitVote","calculateWinner","votesRef","playerAnswer","votesObj","getVotes","voteCount","reduce","accum","curr","keys","x","Math","max","apply","winningAnswer","winnerRef","answerList","GameOver","App","start","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8aeb50f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from 'firebase'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCGtYCFcCObok0vJjiuMAKN0fm4AR27Ez4\",\n    authDomain: \"monil-test.firebaseapp.com\",\n    projectId: \"monil-test\",\n    storageBucket: \"monil-test.appspot.com\",\n    messagingSenderId: \"476914631120\",\n    appId: \"1:476914631120:web:cb16ed40115ae7f0a779d5\",\n    measurementId: \"G-0D403LEFB0\"\n  })\n  \n\n  export default firebase","import {createMemoryHistory, createBrowserHistory} from 'history'\n\nconst history =\n  process.env.NODE_ENV === 'test'\n    ? createMemoryHistory()\n    : createBrowserHistory()\n\nexport default history\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport firebase from './firebase'\nimport history from './history';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst firestore = firebase.firestore();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '20ch',\n    },\n  },\n}));\n\nconst LandingPage = (props) => {\n\nconst classes = useStyles();\nconst getPlayers = async(docRef)=>{\n    let myData = {}\n    await docRef.get().then(function(doc){\n      if(doc && doc.exists){\n         myData = doc.data()\n      }\n    })\n    return myData\n}\n\n\nconst enterGame = async(ev) =>{\n    ev.preventDefault()\n    let gameCode = document.querySelector('#gameCode').value\n    window.localStorage.setItem('gameCode',gameCode.toString())\n    let playerName = document.querySelector('#playerName').value\n    const docRef = firestore.doc(`/${gameCode}/players`)\n    \n    let playerObject = await getPlayers(docRef)\n    let players = Object.values(playerObject) || []\n\n    if(!players.includes(playerName)){\n        players.push(playerName)\n    }\n    \n    if(players.length<=4){\n        let playerField = 'player' + players.length.toString()\n        let playerValue = playerName\n        await docRef.set({...playerObject,[playerField]:playerValue})\n        history.push(`/newgame/${playerField}`)\n    }else{\n        alert('Game Full : Create New Game by entering a unique Game Code')\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        <img className = 'background-image' src ='../brickwall.jpg' />\n        <div className=\"App-header\">\n            {/* <button onClick={start}>Start</button> */}\n            <p className = 'gametitle'>WiseCracker!</p>\n            <form className={classes.root}>\n            <p className='title'>Name</p>\n            <TextField type='textfield' id='playerName' variant='filled'/>\n            <p className='title'>Game Code</p>\n            <TextField type='textfield' id='gameCode' variant='filled'/>\n            </form>\n            <Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={(ev)=>enterGame(ev)}>Enter Game</Button>\n        </div>\n      </div>\n    );\n}\n\nexport default LandingPage;\n","const questionBank = {\n1:'If you could replace your hands with anything, what would it be?',\n2:'What’s something from the 2000’s that desperately needs a comeback in the 2020’s?',\n3:'If aliens came to Earth and said \"Impress us\", what would we show them?',\n// 4:\"If you could replace your hands with anything, what would it be?\",\n// 5:'If you could replace your hands with anything, what would it be?'\n}\n\n//Ques 1 - Tires, T-Shirt Cannons, Credit Card, Beer Pitchers\n//Ques 2  - My Youth, Rent Prices, Adam Sandler, Flip Phones\n//Ques 3 - Bacon, Wal-Mart, How to Dougie, Independence Day\nexport default questionBank\n\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport firebase from \"./firebase\";\nimport history from \"./history\";\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '20ch',\n    },\n  },\n});\n\n\nconst firestore = firebase.firestore();\nconst gameCode = window.localStorage.getItem(\"gameCode\") * 1;\n\n\nclass Answers extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        answers: {},\n        selected:0\n      }\n      this.getAnswers = this.getAnswers.bind(this)\n      this.submitAnswer = this.submitAnswer.bind(this)\n  }\n\n  async getAnswers(answerRef){ \n    let myData = {}\n    await answerRef.onSnapshot(doc=>{\n      if(doc && doc.exists){\n        myData = doc.data()\n        this.setState({\n          answers:myData\n        })\n      }\n    })\n}\n\ncomponentDidMount () {\n    [1,2,3,4,5].map(round=>{\n        const answerObj = 'q_'+round.toString()+'_answers';\n        const answerRef = firestore.doc(`/${gameCode}/${answerObj}`);\n        this.getAnswers(answerRef)\n    })\n  }\n\n  submitAnswer(ev,round,player) {\n    ev.preventDefault()\n    const answerObj = 'q_'+round.toString()+'_answers';\n    const answerRef = firestore.doc(`/${gameCode}/${answerObj}`);\n    const answer = document.querySelector('#answer').value;\n    answerRef.set({...this.state.answers,[player]:answer})\n    this.setState({selected:!this.state.selected})\n  }\n\n  render() {\n    const {classes} = this.props\n    //console.log('Answers ',this.state.answers)\n    const {selected} = this.state\n    const {submitAnswer} = this\n    const {round,player} = this.props\n    return (\n      <div>\n            {!selected?(\n              <div className='answers'>\n                <form className={classes.root}>\n                <TextField type='textfield' id='answer' variant='filled'/>\n                </form>\n                <Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={(ev)=>submitAnswer(ev,round,player)}>Submit</Button>\n              </div>\n            ):<CheckIcon style={{fontSize:'6rem',color:'rgb(255, 208, 0)'}}/>}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Answers);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport firebase from \"./firebase\";\nimport history from \"./history\";\nimport questionBank from \"./questionBank\";\nimport Answers from \"./answers\";\n\nconst firestore = firebase.firestore();\nconst gameCode = window.localStorage.getItem(\"gameCode\") * 1;\nconst docRef = firestore.doc(`/${gameCode}/players`);\nconst maxRoundTime = 30;\nconst maxRounds = 3;\n\nclass LoadGame extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      counter: maxRoundTime,\n      round: 1,\n    };\n    this.startCounter = this.startCounter.bind(this);\n  }\n\n  startCounter() {\n    let timerId = setInterval(() => {\n      if (this.state.round > maxRounds) {\n        clearInterval(timerId);\n        history.push(`/vote/${this.props.player}`);\n      } else if (this.state.counter > 0) {\n        let counter = this.state.counter - 1;\n        this.setState({ counter });\n      } else {\n        this.setState({ counter: maxRoundTime });\n        this.setState({ round: this.state.round + 1 });\n      }\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.startCounter();\n  }\n\n  render() {\n    const { counter } = this.state;\n    const { round } = this.state;\n    const { player } = this.props;\n    const question = questionBank[round];\n    return (\n      <div>\n        <div className=\"counter\">\n          {round<=maxRounds && counter<maxRoundTime?(\n              <div className=\"counterbox\">\n                <p>{counter}</p>\n              </div>\n          ):''}\n        </div>\n        <div>\n          {counter < maxRoundTime?(\n            <div className=\"question\">\n              <h3>Round {round}</h3>\n              <p>{question}</p>\n              <Answers player={player} round={round} />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoadGame;\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport firebase from './firebase'\nimport history from './history';\nimport LoadGame from './loadGame'\n\nconst firestore = firebase.firestore();\nconst gameCode = window.localStorage.getItem('gameCode')*1\nconst docRef = firestore.doc(`/${gameCode}/players`)\n\nclass NewGame extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      players: [],\n      currentPlayer:''\n    }\n    this.getPlayers = this.getPlayers.bind(this)\n  }\n\n\nasync getPlayers(docRef){ \n    let myData = {}\n    await docRef.onSnapshot(doc=>{\n      if(doc && doc.exists){\n        myData = doc.data()\n        const currentPlayer = Object.values(myData).filter(player=>player===myData[this.props.match.params.id])[0]\n        this.setState({\n          players:Object.values(myData),\n          currentPlayer\n        })\n      }\n    })\n}\n\n  componentDidMount () {\n    this.getPlayers(docRef)\n  }\n\n  render(){\n    const {currentPlayer} = this.state\n    const {players} = this.state\n    const {enterGame} = this\n    return (\n      <div id='newgame'>\n        <img className = 'background-image' src ='../brickwall.jpg'/>\n        <div className = 'title'>\n          {players.length<4?\n          (<h3>...Waiting for more players</h3>):\n          <h3>IT'S ON LIKE DONKEY KONG</h3>}\n        </div>\n        {/* <div className=\"listofplayers\"> */}\n        <div className = 'listofplayers'>\n            {players.map(player=>{\n                return(\n                    <p className={player!==currentPlayer?'currentPlayer':'otherPlayers'}>{player}</p>\n                )\n            })}\n        </div>\n        <div className='loadGame'>\n          {players.length>=4?(\n              <LoadGame player = {this.props.match.params.id}/>\n          ):''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewGame;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport firebase from \"./firebase\";\nimport Button from '@material-ui/core/Button';\nimport questionBank from \"./questionBank\";\nimport history from './history'\n\nconst firestore = firebase.firestore();\nconst gameCode = window.localStorage.getItem(\"gameCode\") * 1;\nconst docRef = firestore.doc(`/${gameCode}/players`);\nconst maxRoundTime=20\nconst maxRounds=3\n\nclass Votes extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      counter: 0,\n      round: 1,\n      answers: [],\n      votes: {},\n      winner: [],\n      selectedAnswer:''\n    };\n    this.startCounter = this.startCounter.bind(this);\n    this.submitVote = this.submitVote.bind(this);\n    this.calculateWinner = this.calculateWinner.bind(this)\n  }\n\n  async getVotes(votesRef) {\n    let myData = {};\n    await votesRef.onSnapshot((doc) => {\n      if (doc && doc.exists) {\n        myData = doc.data();\n        this.setState({\n          votes: myData,\n        });\n      }\n    });\n  }\n\n  async getAnswers(answerRef) {\n    let myData = {};\n    await answerRef.onSnapshot((doc) => {\n      if (doc && doc.exists) {\n        myData = doc.data();\n        const playerAnswer = myData[this.props.match.params.id]\n        this.setState({\n          answers: [...this.state.answers, Object.values(myData).filter(answer=>answer!==playerAnswer)],\n        });\n      }\n    });\n  }\n\n  startCounter() {\n    let timerId = setInterval(() => {\n      if (this.state.round > maxRounds) {\n        clearInterval(timerId);\n        history.push('/gameover')\n      } else if (this.state.counter < maxRoundTime) {\n        let counter = this.state.counter + 1;\n        this.setState({ counter });\n      } else {\n        this.setState({ counter: 0 });\n        this.setState({ round: this.state.round + 1 });\n      }\n    }, 1000);\n  }\n\n  async submitVote(answer, round, player) {\n    const votesObj = \"q_\" + round.toString() + \"_votes\";\n    const answerObj = \"q_\" + round.toString() + \"_answers\";\n    const votesRef = firestore.doc(`/${gameCode}/${votesObj}`);\n    const answerRef = firestore.doc(`/${gameCode}/${answerObj}`);\n    await votesRef.set({ ...this.state.votes, [player]: answer });\n    await this.calculateWinner(votesRef, answerRef);\n    this.setState({selectedAnswer:answer})\n  }\n\n  componentDidMount() {\n    this.startCounter();\n    [1, 2, 3, 4, 5].map((round) => {\n      const votesObj = \"q_\" + round.toString() + \"_votes\";\n      const answerObj = \"q_\" + round.toString() + \"_answers\";\n      const votesRef = firestore.doc(`/${gameCode}/${votesObj}`);\n      const answerRef = firestore.doc(`/${gameCode}/${answerObj}`);\n      this.getAnswers(answerRef);\n      this.getVotes(votesRef);\n    });\n  }\n\n  async calculateWinner(votesRef, answerRef) {\n    let votes = {};\n    let answers = {};\n    await votesRef.get().then(function (doc) {\n      if (doc && doc.exists) {\n        votes = doc.data();\n      }\n    });\n    await answerRef.get().then(function (doc) {\n      if (doc && doc.exists) {\n        answers = doc.data();\n      }\n    });\n\n    const winningAnswer = (answers, votes) => {\n      const voteValues = Object.values(votes);\n      let voteCount = voteValues.reduce((accum, curr) => {\n        if (Object.values(answers).includes(curr)) {\n          accum[curr] ? (accum[curr] += 1) : (accum[curr] = 1);\n        }\n        return accum;\n      }, {});\n\n      return Object.keys(voteCount).filter((x) => {\n        return voteCount[x] == Math.max.apply(null, Object.values(voteCount));\n      });\n    };\n    let winner = winningAnswer(answers,votes)\n    const winnerRef = firestore.doc(`/${gameCode}/winner`);\n    await winnerRef.set({winner})\n    winnerRef.onSnapshot((doc) => {\n        if (doc && doc.exists) {\n          let winner = Object.values(doc.data());\n          this.setState({winner})\n        }\n      });\n    // console.log(Object.keys(answers))\n    // console.log(answers)\n    // console.log(winner[0])\n    // let winningPlayer = Object.keys(answers).filter(player=>answers[player]===winner[0])\n    // console.log('winningPlayer: ',winningPlayer)\n  }\n\n  render() {\n    const { counter,round,selectedAnswer,answers,winner } = this.state;\n    const question = questionBank[round]\n    const player = this.props.match.params.id;\n    const answerList = answers.length ? answers[round - 1] : [];\n    const { submitVote } = this;\n    return (\n      <div className=\"votes\">\n        <img className = 'background-image' src ='../brickwall.jpg'/>\n        <div className=\"votecounter\">\n            <h3>{counter < maxRoundTime-5 && round<=maxRounds? `You have ${maxRoundTime-5} seconds` : ''}</h3>\n            {counter<maxRoundTime-5 && round<=maxRounds?(\n                <div className=\"counterbox\">\n                    <p>{round <= maxRounds  && counter < maxRoundTime-5? counter : \"\"}</p>\n                </div>\n            ):''}\n        </div>\n        <div className='voteQuestion'>\n            {counter<maxRoundTime-5 && round<=maxRounds?question:''}\n        </div>\n        <div className='answerList'>\n        {answerList && counter<maxRoundTime-5 && round<=maxRounds\n        ? answerList.map((answer) => (\n            <Button variant=\"contained\" color={selectedAnswer===answer?\"default\":'primary'} component=\"span\" onClick={() => submitVote(answer, round, player)}>\n                {answer}\n            </Button>\n            ))\n        : (\n        <div className='winningAnswer'>\n            <h2>Winning Answer:</h2>\n            <div className='winningAnswer'>\n            {winner.map(winner=>{\n                return(\n                    <h1>{winner}</h1>\n                )\n            })}\n            </div>\n        </div>\n        )\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Votes;\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport firebase from './firebase'\nimport history from './history';\n\nconst firestore = firebase.firestore();\n\nconst GameOver = (props) => {\n\n    return (\n      <div className=\"gameover\">\n        <img className = 'background-image' src ='../brickwall.jpg' />\n        <h1>Game Over!</h1>\n        <h2>Thanks for Playing</h2>\n      </div>\n    );\n}\n\nexport default GameOver;\n","import logo from './logo.svg';\nimport './App.css';\nimport {Route,Switch,Router,Redirect} from 'react-router-dom'\nimport React from 'react'\nimport LandingPage from './landingPage'\nimport NewGame from './newGame'\nimport history from './history'\nimport Votes from './votes'\nimport GameOver from './gameover'\n\n\n//const audio = document.createElement('audio')\n//const audio = new Audio('https://www.learningcontainer.com/wp-content/uploads/2020/02/Kalimba.mp3')\n\nclass App extends React.Component{\n\n  // start(){\n  //  // audio.src='public/intro.wav'\n  //  // audio.load();\n  //   audio.play()\n  // }\n\n  // componentDidMount(){\n  //   this.start()\n  // }\n  \n\n  render(){\n    const {start} = this\n    return (\n      <>\n      {/* <button onClick={start}>Start</button> */}\n      <Router history={history}>\n        <Switch>\n          <Route exact path ='/' component = {LandingPage}/>\n          <Route exact path ='/newgame/:id' component = {NewGame} />\n          <Route exact path = '/vote/:id' component = {Votes} />\n          <Route exact path = '/gameover' component = {GameOver} />\n        </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}